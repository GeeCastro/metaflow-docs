"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6913],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},o="Episode 1: Playlist",i={unversionedId:"getting-started/tutorials/season-1-the-local-experience/episode01",id:"getting-started/tutorials/season-1-the-local-experience/episode01",title:"Episode 1: Playlist",description:"Let's build you a movie playlist.",source:"@site/docs/getting-started/tutorials/season-1-the-local-experience/episode01.md",sourceDirName:"getting-started/tutorials/season-1-the-local-experience",slug:"/getting-started/tutorials/season-1-the-local-experience/episode01",permalink:"/getting-started/tutorials/season-1-the-local-experience/episode01",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/getting-started/tutorials/season-1-the-local-experience/episode01.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Episode 0: Hello World",permalink:"/getting-started/tutorials/season-1-the-local-experience/episode00"},next:{title:"Episode 2: Statistics",permalink:"/getting-started/tutorials/season-1-the-local-experience/episode02"}},s={},p=[{value:"Let&#39;s build you a movie playlist.",id:"lets-build-you-a-movie-playlist",level:2}],u=(c="TutorialsLink",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var c;const d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"episode-1-playlist"},"Episode 1: Playlist"),(0,r.kt)("h2",{id:"lets-build-you-a-movie-playlist"},"Let's build you a movie playlist."),(0,r.kt)("p",null,"This flow loads a movie metadata CSV file and builds a playlist for your favorite movie genre. Everything in Metaflow is versioned, so you can run it multiple times and view all the historical playlists with the Metaflow client in a Notebook."),(0,r.kt)("p",null,"You can find the tutorial code on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/tree/master/metaflow/tutorials/01-playlist"},"GitHub")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Showcasing:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Including external files with ",(0,r.kt)("a",{parentName:"li",href:"../../../metaflow/data#data-in-local-files"},"IncludeFile"),"."),(0,r.kt)("li",{parentName:"ul"},"Basic Metaflow ",(0,r.kt)("a",{parentName:"li",href:"../../../metaflow/basics#how-to-define-parameters-for-flows"},"Parameters"),"."),(0,r.kt)("li",{parentName:"ul"},"Running workflow ",(0,r.kt)("a",{parentName:"li",href:"../../../metaflow/basics#branch"},"branches")," in parallel and joining results."),(0,r.kt)("li",{parentName:"ul"},"Using the Metaflow ",(0,r.kt)("a",{parentName:"li",href:"../../../metaflow/client"},"Client API")," in a Notebook.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Before playing this episode:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"python -m pip install notebook"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To play this episode:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"cd metaflow-tutorials")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"python 01-playlist/playlist.py show")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"python 01-playlist/playlist.py run")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"python 01-playlist/playlist.py run --genre comedy")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"jupyter-notebook 01-playlist/playlist.ipynb"))),(0,r.kt)(u,{link:"../../tutorials",mdxType:"TutorialsLink"}))}m.isMDXComponent=!0}}]);