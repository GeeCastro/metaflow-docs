"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7375],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>d});var a=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=p(o),d=r,m=f["".concat(s,".").concat(d)]||f[d]||c[d]||n;return o?a.createElement(m,i(i({ref:t},u),{},{components:o})):a.createElement(m,i({ref:t},u))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=o.length,i=new Array(n);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<n;p++)i[p]=o[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}f.displayName="MDXCreateElement"},5859:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var a=o(7462),r=(o(7294),o(3905));const n={},i="Roadmap",l={unversionedId:"introduction/roadmap",id:"introduction/roadmap",title:"Roadmap",description:"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet but we may open-source them later if there is sufficient external interest. These features are listed below.",source:"@site/docs/introduction/roadmap.md",sourceDirName:"introduction",slug:"/introduction/roadmap",permalink:"/introduction/roadmap",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/introduction/roadmap.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Release Notes",permalink:"/introduction/release-notes"},next:{title:"Contributing to Metaflow",permalink:"/introduction/contributing-to-metaflow"}},s={},p=[{value:"<del>Support for Kubernetes</del>",id:"support-for-kubernetes",level:2},{value:"Metaflow UI(s)",id:"metaflow-uis",level:2},{value:"Faster and more flexible dependency management solutions",id:"faster-and-more-flexible-dependency-management-solutions",level:2},{value:"Flow Composition",id:"flow-composition",level:2},{value:"<del>MetaflowBot</del>",id:"metaflowbot",level:2},{value:"Metaflow DataFrame",id:"metaflow-dataframe",level:2},{value:"More tutorials and recipes",id:"more-tutorials-and-recipes",level:2},{value:"Support for hosting models as a micro-service",id:"support-for-hosting-models-as-a-micro-service",level:2},{value:"<del>Support for R Lang</del>",id:"support-for-r-lang",level:2},{value:"<del>Support deployments to a production DAG scheduler</del>",id:"support-deployments-to-a-production-dag-scheduler",level:2}],u={toc:p};function c(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"roadmap"},"Roadmap"),(0,r.kt)("p",null,"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet but we may open-source them later if there is sufficient external interest. These features are listed below."),(0,r.kt)("p",null,"Please click the link and comment / thumbs-up the corresponding GitHub issue if you want to see the feature open-sourced."),(0,r.kt)("h2",{id:"support-for-kubernetes"},(0,r.kt)("del",{parentName:"h2"},"Support for Kubernetes")),(0,r.kt)("p",null,"Bring all of Metaflow's capabilities to the Kubernetes universe ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/50"},"Github issue"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update")," - Metaflow 2.6.0 introduced integration with ",(0,r.kt)("a",{parentName:"p",href:"/metaflow/scaling-out-and-up/effortless-scaling-with-kubernetes"},"Kubernetes")," and ",(0,r.kt)("a",{parentName:"p",href:"/going-to-production-with-metaflow/scheduling-metaflow-flows/scheduling-with-argo-workflows"},"Argo Workflows"),"."),(0,r.kt)("h2",{id:"metaflow-uis"},"Metaflow UI","(","s",")"),(0,r.kt)("p",null,"A variety of UI","(","s",")"," for Metaflow - tracking flows, model monitoring, etc"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update")," - ",(0,r.kt)("a",{parentName:"p",href:"https://netflixtechblog.com/open-sourcing-a-monitoring-gui-for-metaflow-75ff465f0d60"},"Metaflow GUI")," to track Metaflow flows is now available!"),(0,r.kt)("h2",{id:"faster-and-more-flexible-dependency-management-solutions"},"Faster and more flexible dependency management solutions"),(0,r.kt)("p",null,"Support for dependency management tools beyond conda and docker and address existing pain points ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/497"},"Github issue"),")"),(0,r.kt)("h2",{id:"flow-composition"},"Flow Composition"),(0,r.kt)("p",null,"Support composing Metaflow flow from other flows ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/245"},"Github issue"),")"),(0,r.kt)("h2",{id:"metaflowbot"},(0,r.kt)("del",{parentName:"h2"},"MetaflowBot")),(0,r.kt)("p",null,"A Slack bot for Metaflow. Use it to ask questions about past runs ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/5"},"Github issue"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update -")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/outerbounds/metaflowbot"},"Metaflowbot")," is now available in Open Source!"),(0,r.kt)("h2",{id:"metaflow-dataframe"},"Metaflow DataFrame"),(0,r.kt)("p",null,"Support in-memory processing of large data sets ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/4"},"Github issue",")")),(0,r.kt)("h2",{id:"more-tutorials-and-recipes"},"More tutorials and recipes"),(0,r.kt)("p",null,"Provide advanced tutorials and documentation highlighting non-trivial use-cases ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/49"},"Github issue",")")),(0,r.kt)("h2",{id:"support-for-hosting-models-as-a-micro-service"},"Support for hosting models as a micro-service"),(0,r.kt)("p",null,"An easy-to-use Function-as-a-Service -style ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=sBM5cSBGZS4"},"microservice hosting platform")," for artifacts ","(","e.g. models",")"," produced by Metaflow runs ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/3"},"Github issue"),")"),(0,r.kt)("h2",{id:"support-for-r-lang"},(0,r.kt)("del",{parentName:"h2"},"Support for R Lang")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=lakPlz8GJcA"},"Metaflow in the R language"),". Provide an idiomatic R API which uses the Python library as the backend ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/1"},"Github issue"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update")," - ",(0,r.kt)("a",{parentName:"p",href:"../../v/r"},"Metaflow-R")," is now available!"),(0,r.kt)("h2",{id:"support-deployments-to-a-production-dag-scheduler"},(0,r.kt)("del",{parentName:"h2"},"Support deployments to a production DAG scheduler")),(0,r.kt)("p",null,"Netflix uses ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=0R58_tx7azY"},"an internal DAG scheduler")," to orchestrate most modeling and ETL pipelines in production. Metaflow flows can be deployed to the production scheduler with a single command. A similar integration could be provided e.g. for ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/step-functions/"},"AWS Step Functions")," ","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/2"},"Github issue"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update")," - Metaflow 2.1.0 introduced ",(0,r.kt)("a",{parentName:"p",href:"/going-to-production-with-metaflow/scheduling-metaflow-flows/scheduling-with-aws-step-functions"},"integration with AWS Step Functions.")))}c.isMDXComponent=!0}}]);