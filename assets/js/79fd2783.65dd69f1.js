"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7780],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(r),d=o,f=l["".concat(c,".").concat(d)]||l[d]||m[d]||s;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=l;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},9093:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const s={},a="@kubernetes",i={unversionedId:"api/step-decorators/kubernetes",id:"api/step-decorators/kubernetes",title:"@kubernetes",description:"The @kubernetes decorator sends a step for execution on a Kubernetes cluster. For more information, see Executing Tasks Remotely.",source:"@site/docs/api/step-decorators/kubernetes.md",sourceDirName:"api/step-decorators",slug:"/api/step-decorators/kubernetes",permalink:"/api/step-decorators/kubernetes",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/step-decorators/kubernetes.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@conda",permalink:"/api/step-decorators/conda"},next:{title:"@resources",permalink:"/api/step-decorators/resources"}},c={},u=[],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},m=p("DocSection"),l=p("SigArgSection"),d=p("SigArg"),f=p("Description"),y=p("ParamSection"),b=p("Parameter"),k={toc:u};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"kubernetes"},"@kubernetes"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@kubernetes")," decorator sends a step for execution on a ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io"},"Kubernetes")," cluster. For more information, see ",(0,o.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/introduction"},"Executing Tasks Remotely"),"."),(0,o.kt)(m,{type:"decorator",name:"kubernetes",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/kubernetes/kubernetes_decorator.py#L36",mdxType:"DocSection"},(0,o.kt)(l,{mdxType:"SigArgSection"},(0,o.kt)(d,{name:"...",mdxType:"SigArg"})),(0,o.kt)(f,{summary:"Specifies that this step should execute on Kubernetes.",mdxType:"Description"}),(0,o.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,o.kt)(b,{name:"cpu",type:"int",desc:"Number of CPUs required for this step. Defaults to 1. If `@resources` is\\nalso present, the maximum value from all decorators is used.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"memory",type:"int",desc:"Memory size (in MB) required for this step. Defaults to 4096 (4GB). If\\n`@resources` is also present, the maximum value from all decorators is\\nused.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"disk",type:"int",desc:"Disk size (in MB) required for this step. Defaults to 10GB. If\\n`@resources` is also present, the maximum value from all decorators is\\nused.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"image",type:"str",desc:"Docker image to use when launching on Kubernetes. If not specified, a\\ndefault Docker image mapping to the current version of Python is used.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"service_account",type:"str",desc:"Kubernetes service account to use when launching pod in Kubernetes. If\\nnot specified, the value of `METAFLOW_KUBERNETES_SERVICE_ACCOUNT` is\\nused from Metaflow configuration.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"namespace",type:"str",desc:"Kubernetes namespace to use when launching pod in Kubernetes. If\\nnot specified, the value of `METAFLOW_KUBERNETES_NAMESPACE` is used\\nfrom Metaflow configuration.",mdxType:"Parameter"}),(0,o.kt)(b,{name:"secrets",type:"List[str]",desc:"Kubernetes secrets to use when launching pod in Kubernetes. These\\nsecrets are in addition to the ones defined in `METAFLOW_KUBERNETES_SECRETS`\\nin Metaflow configuration.",mdxType:"Parameter"}))))}h.isMDXComponent=!0}}]);