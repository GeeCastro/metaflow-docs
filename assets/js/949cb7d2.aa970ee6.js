"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6299],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return d}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(t),d=o,f=l["".concat(c,".").concat(d)]||l[d]||m[d]||s;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=l;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var p=2;p<s;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},3571:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return k}});var n=t(7462),o=t(3366),s=(t(7294),t(3905)),i=["components"],a={},c="@resources",p={unversionedId:"api/step-decorators/resources",id:"api/step-decorators/resources",title:"@resources",description:"The @resources decorator specifies resource requirements for a step.",source:"@site/docs/api/step-decorators/resources.md",sourceDirName:"api/step-decorators",slug:"/api/step-decorators/resources",permalink:"/api/step-decorators/resources",editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/step-decorators/resources.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@kubernetes",permalink:"/api/step-decorators/kubernetes"},next:{title:"@retry",permalink:"/api/step-decorators/retry"}},u=[],m=function(e){return function(r){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",r)}},l=m("DocSection"),d=m("SigArgSection"),f=m("SigArg"),y=m("Description"),h=m("ParamSection"),b=m("Parameter"),g={toc:u};function k(e){var r=e.components,t=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"resources"},"@resources"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"@resources")," decorator specifies resource requirements for a step."),(0,s.kt)("p",null,"Note that ",(0,s.kt)("inlineCode",{parentName:"p"},"@resources")," takes effect only when combined with another decorator like ",(0,s.kt)("inlineCode",{parentName:"p"},"@batch")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"@kubernetes")," which specifies the compute layer. For more information, see ",(0,s.kt)("a",{parentName:"p",href:"/metaflow/scaling-out-and-up"},"Scaling up and out"),"."),(0,s.kt)(l,{type:"decorator",name:"resources",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/resources_decorator.py#L4",mdxType:"DocSection"},(0,s.kt)(d,{mdxType:"SigArgSection"},(0,s.kt)(f,{name:"...",mdxType:"SigArg"})),(0,s.kt)(y,{summary:"Specifies the resources needed when executing this step.",extended_summary:"Use `@resources` to specify the resource requirements\\nindependently from the specific compute layer (`@batch`, `@kubernetes`).\\n\\nYou can choose the compute layer on the command line by executing e.g.\\n```\\npython myflow.py run --with batch\\n```\\nor\\n```\\npython myflow.py run --with kubernetes\\n```\\nwhich executes the flow on the desired system using the\\nrequirements specified in `@resources`.",mdxType:"Description"}),(0,s.kt)(h,{name:"Parameters",mdxType:"ParamSection"},(0,s.kt)(b,{name:"cpu",type:"int",desc:"Number of CPUs required for this step. Defaults to 1.",mdxType:"Parameter"}),(0,s.kt)(b,{name:"gpu",type:"int",desc:"Number of GPUs required for this step. Defaults to 0.",mdxType:"Parameter"}),(0,s.kt)(b,{name:"memory",type:"int",desc:"Memory size (in MB) required for this step. Defaults to 4096.",mdxType:"Parameter"}),(0,s.kt)(b,{name:"shared_memory",type:"int",desc:"The value for the size (in MiB) of the /dev/shm volume for this step.\\nThis parameter maps to the `--shm-size` option in Docker.",mdxType:"Parameter"}))))}k.isMDXComponent=!0}}]);