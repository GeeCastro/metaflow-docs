"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6875],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r="Episode 6: Statistics Redux",l={unversionedId:"getting-started/tutorials/season-2-scaling-out-and-up/episode06",id:"getting-started/tutorials/season-2-scaling-out-and-up/episode06",title:"Episode 6: Statistics Redux",description:"Computing in the Cloud.",source:"@site/docs/getting-started/tutorials/season-2-scaling-out-and-up/episode06.md",sourceDirName:"getting-started/tutorials/season-2-scaling-out-and-up",slug:"/getting-started/tutorials/season-2-scaling-out-and-up/episode06",permalink:"/getting-started/tutorials/season-2-scaling-out-and-up/episode06",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/getting-started/tutorials/season-2-scaling-out-and-up/episode06.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Episode 5: Hello AWS",permalink:"/getting-started/tutorials/season-2-scaling-out-and-up/episode05"},next:{title:"Episode 7: Worldview",permalink:"/getting-started/tutorials/season-2-scaling-out-and-up/episode07"}},s={},p=[{value:"Computing in the Cloud.",id:"computing-in-the-cloud",level:2}],c=(d="TutorialsLink",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var d;const u={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"episode-6-statistics-redux"},"Episode 6: Statistics Redux"),(0,o.kt)("h2",{id:"computing-in-the-cloud"},"Computing in the Cloud."),(0,o.kt)("p",null,"This example revisits ",(0,o.kt)("a",{parentName:"p",href:"../season-1-the-local-experience/episode02"},"Episode 02-statistics: Is this Data Science?"),". With Metaflow, you don't need to make any code changes to scale-up your flow by running on remote compute. In this example, we re-run the ",(0,o.kt)("inlineCode",{parentName:"p"},"stats.py")," workflow adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"--with batch")," command line argument. This instructs Metaflow to run all your steps in the cloud without changing any code. You can control the behavior with additional arguments, like ",(0,o.kt)("inlineCode",{parentName:"p"},"--max-workers"),(0,o.kt)("strong",{parentName:"p"},".")," For this example, ",(0,o.kt)("inlineCode",{parentName:"p"},"max-workers")," is used to limit the number of parallel genre-specific statistics computations. You can then access the data artifacts ","(","even the local CSV file",")"," from anywhere because the data is being stored in the cloud-based datastore."),(0,o.kt)("p",null,"This tutorial uses ",(0,o.kt)("inlineCode",{parentName:"p"},"pandas")," which may not be available in your environment. Use the 'conda' package manager with the ",(0,o.kt)("inlineCode",{parentName:"p"},"conda-forge")," channel added to run this tutorial in any environment"),(0,o.kt)("p",null,"You can find the tutorial code on ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/tree/master/metaflow/tutorials/06-statistics-redux"},"GitHub")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Showcasing:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--with batch")," command line option"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--max-workers")," command line option"),(0,o.kt)("li",{parentName:"ul"},"Accessing data locally or remotely")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Before playing this episode:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"python -m pip install pandas")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"python -m pip install notebook")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"python -m pip install matplotlib")),(0,o.kt)("li",{parentName:"ol"},"This tutorial requires access to compute and storage resources on in the cloud, which can be configured by",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Following the instructions ",(0,o.kt)("a",{parentName:"li",href:"https://outerbounds.com/docs/engineering-welcome/"},"here")," or"),(0,o.kt)("li",{parentName:"ol"},"Requesting ",(0,o.kt)("a",{parentName:"li",href:"https://outerbounds.com/docs/sandbox/"},"a sandbox"),"."))),(0,o.kt)("li",{parentName:"ol"},"This tutorial requires the ",(0,o.kt)("inlineCode",{parentName:"li"},"conda")," package manager to be installed with the conda-forge channel added.",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Download Miniconda at ",(0,o.kt)("a",{parentName:"li",href:"https://docs.conda.io/en/latest/miniconda.html"},"https://docs.conda.io/en/latest/miniconda.html")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"conda config --add channels conda-forge"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To play this episode:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"cd metaflow-tutorials")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},'python 02-statistics/stats.py --environment conda run --with batch --max-workers 4 --with conda:python=3.7,libraries="{pandas:0.24.2}"')),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"jupyter-notebook 06-statistics-redux/stats.ipynb")),(0,o.kt)("li",{parentName:"ol"},"Open ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("strong",{parentName:"em"},"stats.ipynb"))," in your remote Sagemaker notebook")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Note for ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"Python 2.7"))," users: when opening the ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"stats.ipynb"))," in a Sagemaker notebook you will need to change the python kernel by clicking ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"Kernel -",">"," Change Kernel -",">"," conda_python2"))," from the pull down menu. This ensures the Pandas dataframe will deserialize correctly.")),(0,o.kt)(c,{link:"../../tutorials",mdxType:"TutorialsLink"}))}m.isMDXComponent=!0}}]);