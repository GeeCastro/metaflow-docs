"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8353],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=o.createContext({}),u=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,d=f["".concat(l,".").concat(m)]||f[m]||c[m]||n;return r?o.createElement(d,s(s({ref:t},p),{},{components:r})):o.createElement(d,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,s=new Array(n);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<n;u++)s[u]=r[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3604:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var o=r(7462),a=(r(7294),r(3905));const n={},s="Roadmap",i={unversionedId:"v/r/introduction/roadmap",id:"v/r/introduction/roadmap",title:"Roadmap",description:"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet, but we may open-source them later if there is sufficient external interest. These features are listed below.",source:"@site/docs/v/r/introduction/roadmap.md",sourceDirName:"v/r/introduction",slug:"/v/r/introduction/roadmap",permalink:"/v/r/introduction/roadmap",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/v/r/introduction/roadmap.md",tags:[],version:"current",frontMatter:{}},l={},u=[{value:"<strong>Support for R Lang</strong>",id:"support-for-r-lang",level:2},{value:"Support deployments to a production DAG scheduler",id:"support-deployments-to-a-production-dag-scheduler",level:2},{value:"<strong>Support for hosting models as a micro-service</strong>",id:"support-for-hosting-models-as-a-micro-service",level:2},{value:"<strong>Metaflow DataFrame</strong>",id:"metaflow-dataframe",level:2},{value:"<strong>MetaflowBot</strong>",id:"metaflowbot",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"roadmap"},"Roadmap"),(0,a.kt)("p",null,"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet, but we may open-source them later if there is sufficient external interest. These features are listed below."),(0,a.kt)("p",null,"Please click the link and comment / thumbs-up the corresponding GitHub issue if you want to see the feature open-sourced."),(0,a.kt)("h2",{id:"support-for-r-lang"},(0,a.kt)("strong",{parentName:"h2"},"Support for R Lang")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=lakPlz8GJcA"},"Metaflow in the R language"),". Provide an idiomatic R API which uses the Python library as the backend ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/1"},"Github issue"),")"),(0,a.kt)("h2",{id:"support-deployments-to-a-production-dag-scheduler"},"Support deployments to a production DAG scheduler"),(0,a.kt)("p",null,"Netflix uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=0R58_tx7azY"},"an internal DAG scheduler")," to orchestrate most modeling and ETL pipelines in production. Metaflow flows can be deployed to the production scheduler with a single command. A similar integration could be provided e.g. for ",(0,a.kt)("a",{parentName:"p",href:"https://aws.amazon.com/step-functions/"},"AWS Step Functions")," ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/2"},"Github issue"),")"),(0,a.kt)("h2",{id:"support-for-hosting-models-as-a-micro-service"},(0,a.kt)("strong",{parentName:"h2"},"Support for hosting models as a micro-service")),(0,a.kt)("p",null,"An easy-to-use Function-as-a-Service -style ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=sBM5cSBGZS4"},"microservice hosting platform")," for artifacts ","(","e.g. models",")"," produced by Metaflow runs ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/3"},"Github issue"),")"),(0,a.kt)("h2",{id:"metaflow-dataframe"},(0,a.kt)("strong",{parentName:"h2"},"Metaflow DataFrame")),(0,a.kt)("p",null,"Support in-memory processing of large data sets ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/4"},"Github issue",")")),(0,a.kt)("h2",{id:"metaflowbot"},(0,a.kt)("strong",{parentName:"h2"},"MetaflowBot")),(0,a.kt)("p",null,"A Slack bot for Metaflow. Use it to ask questions about past runs ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/5"},"Github issue"),")"))}c.isMDXComponent=!0}}]);