"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3719],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(t),m=o,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||a;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},134:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const a={},i="Managing Flows in Notebooks and Scripts",l={unversionedId:"metaflow/managing-flows/introduction",id:"metaflow/managing-flows/introduction",title:"Managing Flows in Notebooks and Scripts",description:"This is a new feature in Metaflow 2.12. Make sure you have a recent enough version of",source:"@site/docs/metaflow/managing-flows/introduction.md",sourceDirName:"metaflow/managing-flows",slug:"/metaflow/managing-flows/introduction",permalink:"/metaflow/managing-flows/introduction",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/metaflow/managing-flows/introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Inspecting Flows and Results",permalink:"/metaflow/client"},next:{title:"Running in a Notebook",permalink:"/metaflow/managing-flows/notebook-runs"}},s={},u=[],c={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"managing-flows-in-notebooks-and-scripts"},"Managing Flows in Notebooks and Scripts"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This is a new feature in Metaflow 2.12. Make sure you have a recent enough version of\nMetaflow to use this feature.")),(0,o.kt)("p",null,"Besides executing flows on the command line, Metaflow provides an API for starting\nruns and other operations programmatically. This feature comes in handy when you want\nto, for instance"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Develop and ",(0,o.kt)("a",{parentName:"p",href:"notebook-runs"},"execute flows in a notebook"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create your own wrapper scripts to ",(0,o.kt)("a",{parentName:"p",href:"runner"},"launchs flows programmatically"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"deployer"},"Deploy flows programmatically")," in a CI/CD system like\nGitHub Actions.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a UI for executing and inspecting Metaflow runs locally with\n",(0,o.kt)("a",{parentName:"p",href:"runner#non-blocking-api"},"the asynchronous runner API"),"."))),(0,o.kt)("p",null,"In cases like this ",(0,o.kt)("a",{parentName:"p",href:"/api/runner"},"the Runner API")," allows you to run flows and perform other actions\nlocally, similar to running the flow manually on the command line. After you have ",(0,o.kt)("a",{parentName:"p",href:"/production/introduction"},"deployed\na flow in production"),", you can use the command line or\n",(0,o.kt)("a",{parentName:"p",href:"/production/event-triggering"},"event-triggering")," to execute flows in the production environment."))}p.isMDXComponent=!0}}]);