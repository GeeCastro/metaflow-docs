"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2970],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=l(r),f=o,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||a;return r?n.createElement(d,c(c({ref:t},s),{},{components:r})):n.createElement(d,c({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3075:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return s},default:function(){return j}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],i={},p="@project",l={unversionedId:"api/flow-decorators/project",id:"api/flow-decorators/project",title:"@project",description:"The @project decorator makes it convenient to create isolated Metaflow namespaces and",source:"@site/docs/api/flow-decorators/project.md",sourceDirName:"api/flow-decorators",slug:"/api/flow-decorators/project",permalink:"/api/flow-decorators/project",editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/flow-decorators/project.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@conda_base",permalink:"/api/flow-decorators/conda_base"},next:{title:"@schedule",permalink:"/api/flow-decorators/schedule"}},s=[],u=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},m=u("DocSection"),f=u("SigArgSection"),d=u("SigArg"),h=u("Description"),y=u("ParamSection"),g=u("Parameter"),w={toc:s};function j(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},w,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"project"},"@project"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@project")," decorator makes it convenient to create isolated ",(0,a.kt)("a",{parentName:"p",href:"/metaflow/tagging"},"Metaflow namespaces")," and\ncorresponding ",(0,a.kt)("a",{parentName:"p",href:"/going-to-production-with-metaflow/scheduling-metaflow-flows"},"proudction deployments"),". When\nmultiple flows use the same project name, they can fetch data across them safely using ",(0,a.kt)("a",{parentName:"p",href:"/metaflow/client"},"the Client API"),", without interference from other users running the same flows."),(0,a.kt)("p",null,"By itself, ",(0,a.kt)("inlineCode",{parentName:"p"},"@project")," doesn't change the behavior besides ",(0,a.kt)("a",{parentName:"p",href:"/api/current#project"},"exposing new attributes in the ",(0,a.kt)("inlineCode",{parentName:"a"},"current")," object"),". It alters the flow names when they are deployed in production, allowing multiple parallel deployments."),(0,a.kt)("p",null,"For more information, see ",(0,a.kt)("a",{parentName:"p",href:"/going-to-production-with-metaflow/coordinating-larger-metaflow-projects"},"Coordinating Larger Metaflow Projects"),"."),(0,a.kt)(m,{type:"decorator",name:"project",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/project_decorator.py#L15",mdxType:"DocSection"},(0,a.kt)(f,{mdxType:"SigArgSection"},(0,a.kt)(d,{name:"...",mdxType:"SigArg"})),(0,a.kt)(h,{summary:"Specifies what projects belong to the same project.",extended_summary:"A project-specific namespace is created for all flows that\\nuse the same `@project(name)`.",mdxType:"Description"}),(0,a.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,a.kt)(g,{name:"name",type:"str",desc:"Project name. Make sure that the name is unique amongst all\\nprojects that use the same production scheduler.",mdxType:"Parameter"}))))}j.isMDXComponent=!0}}]);