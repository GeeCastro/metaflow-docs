"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"python":[{"type":"link","label":"Welcome to Metaflow","href":"/","docId":"index"},{"type":"category","label":"Introduction","items":[{"type":"link","label":"Why Metaflow","href":"/introduction/why-metaflow","docId":"introduction/why-metaflow"},{"type":"link","label":"What is Metaflow","href":"/introduction/what-is-metaflow","docId":"introduction/what-is-metaflow"},{"type":"link","label":"Metaflow Resources","href":"/introduction/metaflow-resources","docId":"introduction/metaflow-resources"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installing Metaflow","href":"/getting-started/install","docId":"getting-started/install"},{"type":"link","label":"Deploying Infrastructure for Metaflow","href":"/getting-started/infrastructure","docId":"getting-started/infrastructure"},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"Season 1: The Local Experience","items":[{"type":"link","label":"Episode 0: Hello World","href":"/getting-started/tutorials/season-1-the-local-experience/episode00","docId":"getting-started/tutorials/season-1-the-local-experience/episode00"},{"type":"link","label":"Episode 1: Playlist","href":"/getting-started/tutorials/season-1-the-local-experience/episode01","docId":"getting-started/tutorials/season-1-the-local-experience/episode01"},{"type":"link","label":"Episode 2: Statistics","href":"/getting-started/tutorials/season-1-the-local-experience/episode02","docId":"getting-started/tutorials/season-1-the-local-experience/episode02"},{"type":"link","label":"Episode 3: Playlist Redux","href":"/getting-started/tutorials/season-1-the-local-experience/episode03","docId":"getting-started/tutorials/season-1-the-local-experience/episode03"},{"type":"link","label":"Episode 4: Playlist Plus","href":"/getting-started/tutorials/season-1-the-local-experience/episode04","docId":"getting-started/tutorials/season-1-the-local-experience/episode04"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/season-1-the-local-experience/"},{"type":"category","label":"Season 2: Scaling Out and Up","items":[{"type":"link","label":"Episode 5: Hello AWS","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode05","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode05"},{"type":"link","label":"Episode 6: Statistics Redux","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode06","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode06"},{"type":"link","label":"Episode 7: Worldview","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode07","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode07"},{"type":"link","label":"Episode 8: Autopilot","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode-8-autopilot","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode-8-autopilot"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/season-2-scaling-out-and-up/"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developing with Metaflow","items":[{"type":"link","label":"Creating Flows","href":"/metaflow/basics","docId":"metaflow/basics"},{"type":"link","label":"Inspecting Flows and Results","href":"/metaflow/client","docId":"metaflow/client"},{"type":"link","label":"Debugging Flows","href":"/metaflow/debugging","docId":"metaflow/debugging"},{"type":"category","label":"Visualizing Results","items":[{"type":"link","label":"Effortless Task Inspection with Default Cards","href":"/metaflow/visualizing-results/effortless-task-inspection-with-default-cards","docId":"metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},{"type":"link","label":"Easy Custom Reports with Card Components","href":"/metaflow/visualizing-results/easy-custom-reports-with-card-components","docId":"metaflow/visualizing-results/easy-custom-reports-with-card-components"},{"type":"link","label":"Advanced, Shareable Cards with Card Templates","href":"/metaflow/visualizing-results/advanced-shareable-cards-with-card-templates","docId":"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates"}],"collapsed":true,"collapsible":true,"href":"/metaflow/visualizing-results/"}],"collapsed":true,"collapsible":true,"href":"/metaflow/introduction"},{"type":"category","label":"Scalable Flows","items":[{"type":"category","label":"Executing Tasks Remotely","items":[{"type":"link","label":"Using Kubernetes","href":"/scaling/remote-tasks/kubernetes","docId":"scaling/remote-tasks/kubernetes"},{"type":"link","label":"Using AWS Batch","href":"/scaling/remote-tasks/aws-batch","docId":"scaling/remote-tasks/aws-batch"}],"collapsed":true,"collapsible":true,"href":"/scaling/remote-tasks/introduction"},{"type":"link","label":"Dealing with Failures","href":"/scaling/failures","docId":"scaling/failures"},{"type":"link","label":"Loading and Storing Data","href":"/scaling/data","docId":"scaling/data"},{"type":"link","label":"Managing External Libraries","href":"/scaling/dependencies","docId":"scaling/dependencies"},{"type":"link","label":"Organizing Results","href":"/scaling/tagging","docId":"scaling/tagging"}],"collapsed":true,"collapsible":true,"href":"/scaling/introduction"},{"type":"category","label":"Production Deployments","items":[{"type":"category","label":"Scheduling Metaflow Flows","items":[{"type":"link","label":"Scheduling Metaflow Flows with Argo Workflows","href":"/production/scheduling-metaflow-flows/scheduling-with-argo-workflows","docId":"production/scheduling-metaflow-flows/scheduling-with-argo-workflows"},{"type":"link","label":"Scheduling Metaflow Flows with AWS Step Functions","href":"/production/scheduling-metaflow-flows/scheduling-with-aws-step-functions","docId":"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions"}],"collapsed":true,"collapsible":true,"href":"/production/scheduling-metaflow-flows/introduction"},{"type":"link","label":"Coordinating Larger Metaflow Projects","href":"/production/coordinating-larger-metaflow-projects","docId":"production/coordinating-larger-metaflow-projects"}],"collapsed":true,"collapsible":true,"href":"/production/introduction"},{"type":"category","label":"API Reference","items":[{"type":"link","label":"Client API - Accessing past results","href":"/api/client","docId":"api/client"},{"type":"link","label":"FlowSpec - Constructing flows","href":"/api/flowspec","docId":"api/flowspec"},{"type":"link","label":"Current - Operating a run","href":"/api/current","docId":"api/current"},{"type":"link","label":"S3 - Accessing data in S3 quickly","href":"/api/S3","docId":"api/S3"},{"type":"link","label":"Cards - Visualizing results","href":"/api/cards","docId":"api/cards"},{"type":"category","label":"Step Decorators","items":[{"type":"link","label":"@environment","href":"/api/step-decorators/environment","docId":"api/step-decorators/environment"},{"type":"link","label":"@batch","href":"/api/step-decorators/batch","docId":"api/step-decorators/batch"},{"type":"link","label":"@card","href":"/api/step-decorators/card","docId":"api/step-decorators/card"},{"type":"link","label":"@catch","href":"/api/step-decorators/catch","docId":"api/step-decorators/catch"},{"type":"link","label":"@conda","href":"/api/step-decorators/conda","docId":"api/step-decorators/conda"},{"type":"link","label":"@kubernetes","href":"/api/step-decorators/kubernetes","docId":"api/step-decorators/kubernetes"},{"type":"link","label":"@resources","href":"/api/step-decorators/resources","docId":"api/step-decorators/resources"},{"type":"link","label":"@retry","href":"/api/step-decorators/retry","docId":"api/step-decorators/retry"},{"type":"link","label":"@step","href":"/api/step-decorators/step","docId":"api/step-decorators/step"},{"type":"link","label":"@timeout","href":"/api/step-decorators/timeout","docId":"api/step-decorators/timeout"}],"collapsed":true,"collapsible":true,"href":"/api/step-decorators/"},{"type":"category","label":"Flow Decorators","items":[{"type":"link","label":"@conda_base","href":"/api/flow-decorators/conda_base","docId":"api/flow-decorators/conda_base"},{"type":"link","label":"@project","href":"/api/flow-decorators/project","docId":"api/flow-decorators/project"},{"type":"link","label":"@schedule","href":"/api/flow-decorators/schedule","docId":"api/flow-decorators/schedule"}],"collapsed":true,"collapsible":true,"href":"/api/flow-decorators/"}],"collapsed":true,"collapsible":true,"href":"/api/"},{"type":"category","label":"Internals of Metaflow","items":[{"type":"link","label":"Release Notes","href":"/internals/release-notes","docId":"internals/release-notes"},{"type":"link","label":"Technical Overview","href":"/internals/technical-overview","docId":"internals/technical-overview"},{"type":"link","label":"Testing Philosophy","href":"/internals/testing-philosophy","docId":"internals/testing-philosophy"},{"type":"link","label":"Contributing to Metaflow","href":"/internals/contributing","docId":"internals/contributing"}],"collapsed":true,"collapsible":true}],"r":[{"type":"link","label":"Welcome to Metaflow for R","href":"/v/r/","docId":"v/r/README"},{"type":"category","label":"Introduction","items":[{"type":"link","label":"Why Metaflow","href":"/v/r/introduction/why-metaflow","docId":"v/r/introduction/why-metaflow"},{"type":"link","label":"What is Metaflow","href":"/v/r/introduction/what-is-metaflow","docId":"v/r/introduction/what-is-metaflow"},{"type":"link","label":"Release Notes","href":"/v/r/introduction/release-notes","docId":"v/r/introduction/release-notes"},{"type":"link","label":"Contributing to Metaflow","href":"/v/r/introduction/contributing-to-metaflow","docId":"v/r/introduction/contributing-to-metaflow"},{"type":"link","label":"Get in Touch","href":"/v/r/introduction/getting-in-touch","docId":"v/r/introduction/getting-in-touch"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installing Metaflow","href":"/v/r/getting-started/install","docId":"v/r/getting-started/install"},{"type":"link","label":"Development Environment","href":"/v/r/getting-started/development-environment","docId":"v/r/getting-started/development-environment"},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"Season 1: The Local Experience","items":[{"type":"link","label":"Episode 0: Hello World","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode00","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode00"},{"type":"link","label":"Episode 1: Playlist","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode01","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode01"},{"type":"link","label":"Episode 2: Statistics","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode02","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode02"},{"type":"link","label":"Episode 3: Playlist Redux","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode03","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode03"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/season-1-the-local-experience/"},{"type":"category","label":"Season 2: Scaling Out and Up","items":[{"type":"link","label":"Episode 4: Hello AWS","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04"},{"type":"link","label":"Episode 5: Statistics Redux","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05"},{"type":"link","label":"Episode 6: Worldview","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/"}],"collapsed":true,"collapsible":true}]},"docs":{"api/cards":{"id":"api/cards","title":"Cards - Visualizing results","description":"Metaflow Cards allows you to produce human readable reports in workflows. Use the following APIs to enable, customize, and access cards:","sidebar":"python"},"api/client":{"id":"api/client","title":"Client API - Accessing past results","description":"Use these objects to access data from past runs and to manipulate tags. Objects in this module are organized as a hierarchy:","sidebar":"python"},"api/current":{"id":"api/current","title":"Current - Operating a run","description":"The current object is used to inspect and manipulate the currently executing run. It is only available during flow execution, i.e. inside a FlowSpec class and functions called from its steps. You can access the object simply by importing it: from metaflow import current.","sidebar":"python"},"api/flow-decorators/conda_base":{"id":"api/flow-decorators/conda_base","title":"@conda_base","description":"The @conda_base decorator specifies what libraries should be made available for all steps of a flow.","sidebar":"python"},"api/flow-decorators/project":{"id":"api/flow-decorators/project","title":"@project","description":"The @project decorator makes it convenient to create isolated Metaflow namespaces and","sidebar":"python"},"api/flow-decorators/README":{"id":"api/flow-decorators/README","title":"Flow Decorators","description":"These decorators are set at the flow level, i.e. above the class definition. In contrast to step decorators, they can\'t be attached on the command line using --with.","sidebar":"python"},"api/flow-decorators/schedule":{"id":"api/flow-decorators/schedule","title":"@schedule","description":"The @schedule decorator specifies the times when the flow should be run when deployed to an external orchestrator like AWS Step Functions or Argo Workflows.","sidebar":"python"},"api/flowspec":{"id":"api/flowspec","title":"FlowSpec - Constructing flows","description":"Metaflow flows are defined by inhering from the FlowSpec class:","sidebar":"python"},"api/README":{"id":"api/README","title":"Metaflow API reference","description":"These pages document the public API of Metaflow.","sidebar":"python"},"api/S3":{"id":"api/S3","title":"S3 - Accessing data in S3 quickly","description":"The S3 client is a wrapper over the standard AWS Python library, boto. It contains enhancements that are relevant for data-intensive applications:","sidebar":"python"},"api/step-decorators/batch":{"id":"api/step-decorators/batch","title":"@batch","description":"The @batch decorator sends a step for execution on the AWS Batch compute layer. For more information, see Executing Tasks Remotely.","sidebar":"python"},"api/step-decorators/card":{"id":"api/step-decorators/card","title":"@card","description":"Creates a report card after the step completes. For more information, see Visualizing Results and the main API docs for cards.","sidebar":"python"},"api/step-decorators/catch":{"id":"api/step-decorators/catch","title":"@catch","description":"The @catch decorator ensures that a step will succeed, despite any errors in the user code or transient platform issues.","sidebar":"python"},"api/step-decorators/conda":{"id":"api/step-decorators/conda","title":"@conda","description":"The @conda decorator specifies what libraries should be made available for a step.","sidebar":"python"},"api/step-decorators/environment":{"id":"api/step-decorators/environment","title":"@environment","description":"The @environment decorator specifies environment variables for a step.","sidebar":"python"},"api/step-decorators/kubernetes":{"id":"api/step-decorators/kubernetes","title":"@kubernetes","description":"The @kubernetes decorator sends a step for execution on a Kubernetes cluster. For more information, see Executing Tasks Remotely.","sidebar":"python"},"api/step-decorators/README":{"id":"api/step-decorators/README","title":"Step Decorators","description":"These decorators are set at the step level, i.e. above the @step","sidebar":"python"},"api/step-decorators/resources":{"id":"api/step-decorators/resources","title":"@resources","description":"The @resources decorator specifies resource requirements for a step.","sidebar":"python"},"api/step-decorators/retry":{"id":"api/step-decorators/retry","title":"@retry","description":"The @retry decorator specifies how many times the task(s) corresponding to a step should be retried before failing the flow.","sidebar":"python"},"api/step-decorators/step":{"id":"api/step-decorators/step","title":"@step","description":"The @step decorator converts a method to a step of a flow.","sidebar":"python"},"api/step-decorators/timeout":{"id":"api/step-decorators/timeout","title":"@timeout","description":"The @timeout decorator specifies for how long a step should execute before it is interrupted.","sidebar":"python"},"getting-started/infrastructure":{"id":"getting-started/infrastructure","title":"Deploying Infrastructure for Metaflow","description":"While you can get started with Metaflow easily on your laptop, the main benefits of Metaflow lie in its","sidebar":"python"},"getting-started/install":{"id":"getting-started/install","title":"Installing Metaflow","description":"Metaflow is available as a Python package for MacOS and Linux. You can visit our GitHub repository or get the latest version from PyPI:","sidebar":"python"},"getting-started/tutorials/README":{"id":"getting-started/tutorials/README","title":"Tutorials","description":"This set of tutorials provides a hands-on introduction to Metaflow. The basic concepts are introduced in practice, and you can find out more details about the functionality showcased in these tutorials in Basics of Metaflow and the following sections.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode00":{"id":"getting-started/tutorials/season-1-the-local-experience/episode00","title":"Episode 0: Hello World","description":"Metaflow says Hi!","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode01":{"id":"getting-started/tutorials/season-1-the-local-experience/episode01","title":"Episode 1: Playlist","description":"Let\'s build you a movie playlist.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode02":{"id":"getting-started/tutorials/season-1-the-local-experience/episode02","title":"Episode 2: Statistics","description":"Is this Data Science?","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode03":{"id":"getting-started/tutorials/season-1-the-local-experience/episode03","title":"Episode 3: Playlist Redux","description":"Follow the Money.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode04":{"id":"getting-started/tutorials/season-1-the-local-experience/episode04","title":"Episode 4: Playlist Plus","description":"The Final Showdown.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/README":{"id":"getting-started/tutorials/season-1-the-local-experience/README","title":"Season 1: The Local Experience","description":"This season focus on introducing the basics of Metaflow. You can run all these tutorials on your local machine.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode-8-autopilot":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode-8-autopilot","title":"Episode 8: Autopilot","description":"Scheduling Compute in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode05":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode05","title":"Episode 5: Hello AWS","description":"Look Mom, We\'re in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode06":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode06","title":"Episode 6: Statistics Redux","description":"Computing in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode07":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode07","title":"Episode 7: Worldview","description":"Way up here.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/README":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/README","title":"Season 2: Scaling Out and Up","description":"This season introduces how to use Metaflow in the cloud. To run through these tutorials, you will either need to setup Metaflow on AWS or use the Metaflow Sandbox.","sidebar":"python"},"index":{"id":"index","title":"Welcome to Metaflow","description":"Build and manage real-life data science projects with ease.","sidebar":"python"},"internals/contributing":{"id":"internals/contributing","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!","sidebar":"python"},"internals/release-notes":{"id":"internals/release-notes","title":"Release Notes","description":"Read below how Metaflow has improved over time.","sidebar":"python"},"internals/technical-overview":{"id":"internals/technical-overview","title":"Technical Overview","description":"Make sure you have read Basics of Metaflow before diving into technical details below. You can find more technical details at the infrastructure level in Administrator\'s Guide to Metaflow. This document focuses on the Metaflow codebase.","sidebar":"python"},"internals/testing-philosophy":{"id":"internals/testing-philosophy","title":"Testing Philosophy","description":"Watch this talk for motivation: Autonomous Testing and the Future of Software Development by Will Wilson.","sidebar":"python"},"introduction/metaflow-resources":{"id":"introduction/metaflow-resources","title":"Metaflow Resources","description":"Here\'s an incomplete overview of Metaflow resources outside this documentation. Let us know on Slack or open a pull request if you find or, even better, create a resource that should be listed here \ud83e\udd17","sidebar":"python"},"introduction/what-is-metaflow":{"id":"introduction/what-is-metaflow","title":"What is Metaflow","description":"Metaflow is a human-friendly Python library that makes it straightforward to develop, deploy, and operate various kinds","sidebar":"python"},"introduction/why-metaflow":{"id":"introduction/why-metaflow","title":"Why Metaflow","description":"1. Modern businesses are eager to utilize data science and ML","sidebar":"python"},"metaflow/basics":{"id":"metaflow/basics","title":"Creating Flows","description":"This document introduces the basic concepts of Metaflow. If you are eager to try out Metaflow in practice, you can start with the tutorial. After the tutorial, you can return to this document to learn more about how Metaflow works.","sidebar":"python"},"metaflow/client":{"id":"metaflow/client","title":"Inspecting Flows and Results","description":"Metaflow provides a client API that is used to inspect results of past runs. It is particularly well suited to being used in notebooks.","sidebar":"python"},"metaflow/debugging":{"id":"metaflow/debugging","title":"Debugging Flows","description":"Metaflow wants to make debugging failed flows as painless as possible.","sidebar":"python"},"metaflow/introduction":{"id":"metaflow/introduction","title":"Developing with Metaflow","description":"Every project is a journey. Each stage of the journey presents different challenges and requirements. Luckily Metaflow","sidebar":"python"},"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates":{"id":"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates","title":"Advanced, Shareable Cards with Card Templates","description":"The built-in Card Components allow you to create a visual report with a few lines of Python code. This is by far the easiest way to output visualizations using Metaflow\u2019s default visual style and layout.","sidebar":"python"},"metaflow/visualizing-results/easy-custom-reports-with-card-components":{"id":"metaflow/visualizing-results/easy-custom-reports-with-card-components","title":"Easy Custom Reports with Card Components","description":"Default Cards are useful during development when you need to quickly inspect artifacts produced by a task or visualize the overall structure of the flow. As your project progresses, you may want to create a custom card that highlights information specific to your project.","sidebar":"python"},"metaflow/visualizing-results/effortless-task-inspection-with-default-cards":{"id":"metaflow/visualizing-results/effortless-task-inspection-with-default-cards","title":"Effortless Task Inspection with Default Cards","description":"Metaflow comes with a built-in Default Card that shows all artifacts produced by a task. Let\u2019s create a simple flow to test it.","sidebar":"python"},"metaflow/visualizing-results/README":{"id":"metaflow/visualizing-results/README","title":"Visualizing Results","description":"What if you want to share results of flows with human beings or inspect results by yourself? One option is to use Jupyter notebooks and Metaflow Client API, which is a good combination for ad-hoc analysis and exploration.","sidebar":"python"},"production/coordinating-larger-metaflow-projects":{"id":"production/coordinating-larger-metaflow-projects","title":"Coordinating Larger Metaflow Projects","description":"Most Metaflow projects start as a simple Python script that is developed by a single data scientist. Metaflow takes care of keeping results organized automatically, so you can focus on developing models and the business logic around them.","sidebar":"python"},"production/introduction":{"id":"production/introduction","title":"Production Deployments","description":"What does production mean exactly? Surely the answer depends on who you ask and what application they are working on. There are so many different","sidebar":"python"},"production/scheduling-metaflow-flows/introduction":{"id":"production/scheduling-metaflow-flows/introduction","title":"Scheduling Metaflow Flows","description":"While the run command is convenient during development, you can\'t keep exeucting it manually in production. An old-school solution would be to use a time-based scheduler like Cron to execute the command automatically at a set schedule, but this approach has a number of serious downsides:","sidebar":"python"},"production/scheduling-metaflow-flows/scheduling-with-argo-workflows":{"id":"production/scheduling-metaflow-flows/scheduling-with-argo-workflows","title":"Scheduling Metaflow Flows with Argo Workflows","description":"Argo Workflows is a Kubernetes-native workflow orchestrator - you can read Argo Workflows documentation to learn all about it. If you just want to get your flow in production, this document contains everything you need to know.","sidebar":"python"},"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions":{"id":"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions","title":"Scheduling Metaflow Flows with AWS Step Functions","description":"AWS Step Functions is a general-purpose workflow orchestrator - you can read AWS Step Functions documentation to learn all about it. If you just want to get your flow in production, this document contains everything you need to know.","sidebar":"python"},"scaling/data":{"id":"scaling/data","title":"Loading and Storing Data","description":"This chapter describes tools and patterns for moving data in and out of your Metaflow flows.","sidebar":"python"},"scaling/dependencies":{"id":"scaling/dependencies","title":"Managing External Libraries","description":"What if your step code wants to import an external library? When you run Metaflow code locally, it behaves as any other Python code, so all libraries available to your Python interpreter can be imported in steps.","sidebar":"python"},"scaling/failures":{"id":"scaling/failures","title":"Dealing with Failures","description":"Failures are a natural, expected part of data science workflows. Here are some typical reasons why you can expect your workflow to fail:","sidebar":"python"},"scaling/introduction":{"id":"scaling/introduction","title":"Scalable Compute and Data","description":"After you have prototyped a flow locally and iterated with it for a while, you may face questions like these:","sidebar":"python"},"scaling/remote-tasks/aws-batch":{"id":"scaling/remote-tasks/aws-batch","title":"Using AWS Batch","description":"Here are some useful tips and tricks related to running Metaflow on AWS Batch. See our engineering resources for additional information about setting up and operating AWS Batch for Metaflow.","sidebar":"python"},"scaling/remote-tasks/introduction":{"id":"scaling/remote-tasks/introduction","title":"Executing Tasks Remotely","description":"There are two ways to handle larger amounts of data and compute:","sidebar":"python"},"scaling/remote-tasks/kubernetes":{"id":"scaling/remote-tasks/kubernetes","title":"Using Kubernetes","description":"Here are some useful tips and tricks related to running Metaflow on Kubernetes. See our engineering resources for additional information about setting up and operating Kubernetes for Metaflow.","sidebar":"python"},"scaling/tagging":{"id":"scaling/tagging","title":"Organizing Results","description":"A boring, under-appreciated part of high-quality science (or any project work in general), is keeping results organized. This is the key to effective collaboration, versioning of parallel lines of work, and reproducibility.","sidebar":"python"},"v/r/getting-started/development-environment":{"id":"v/r/getting-started/development-environment","title":"Development Environment","description":"You can install and use Metaflow easily within your favorite IDE, whether it is RStudio, a Jupyter Notebook, vim/emacs on your terminal, or any other IDE.","sidebar":"r"},"v/r/getting-started/install":{"id":"v/r/getting-started/install","title":"Installing Metaflow","description":"MacOS/Linux","sidebar":"r"},"v/r/getting-started/tutorials/README":{"id":"v/r/getting-started/tutorials/README","title":"Tutorials","description":"This set of tutorials provides a hands-on introduction to Metaflow. The basic concepts are introduced in practice, and you can find out more details about the functionality showcased in these tutorials in Basics of Metaflow and the following sections.","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode00":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode00","title":"Episode 0: Hello World","description":"Metaflow says Hi!","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode01":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode01","title":"Episode 1: Playlist","description":"This flow loads a movie metadata CSV file and builds a playlist for your favorite movie genre. Everything in Metaflow is versioned, so you can run it multiple times and view all the historical playlists with the Metaflow client in an R Markdown Notebook.","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode02":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode02","title":"Episode 2: Statistics","description":"Use Metaflow to load the movie metadata CSV file into a data frame and compute some movie genre specific statistics. These statistics are then used in later examples to improve our playlist generator.","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode03":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode03","title":"Episode 3: Playlist Redux","description":"Use Metaflow to load the statistics generated from Episode 2 Is this Data Science and recommend movies from a genre with highest median gross box office","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/README":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/README","title":"Season 1: The Local Experience","description":"This season focuses on introducing the basics of Metaflow. You can run all these tutorials on your local machine.","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04","title":"Episode 4: Hello AWS","description":"This flow is a simple linear workflow that verifies your AWS configuration. The start and end steps will run locally, while the hello step will run remotely on AWS batch.","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05","title":"Episode 5: Statistics Redux","description":"This example revisits Episode 02-statistics: Is this Data Science?.","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06","title":"Episode 6: Worldview","description":"This episode shows how you can use a notebook to setup a simple dashboard to monitor all of your Metaflow flows.","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/README":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/README","title":"Season 2: Scaling Out and Up","description":"This season introduces how to use Metaflow on AWS. To run through these tutorials, you will either need to setup Metaflow on AWS or use the Metaflow Sandbox.","sidebar":"r"},"v/r/going-to-production-with-metaflow/scheduling-metaflow-flows":{"id":"v/r/going-to-production-with-metaflow/scheduling-metaflow-flows","title":"Scheduling Metaflow Flows","description":"A key feature of Metaflow is to make it easy to take machine learning pipelines from prototyping to production. This sentence and a number of other Metaflow documents use the word production casually. What do we actually mean by it?"},"v/r/introduction/contributing-to-metaflow":{"id":"v/r/introduction/contributing-to-metaflow","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!","sidebar":"r"},"v/r/introduction/getting-in-touch":{"id":"v/r/introduction/getting-in-touch","title":"Get in Touch","description":"Thank you for your interest in Metaflow. We are here to help. The team is most active on our Gitter channel.","sidebar":"r"},"v/r/introduction/release-notes":{"id":"v/r/introduction/release-notes","title":"Release Notes","description":"Read below how Metaflow has improved over time.","sidebar":"r"},"v/r/introduction/roadmap":{"id":"v/r/introduction/roadmap","title":"Roadmap","description":"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet but we may open-source them later if there is sufficient external interest. These features are listed below."},"v/r/introduction/what-is-metaflow":{"id":"v/r/introduction/what-is-metaflow","title":"What is Metaflow","description":"Metaflow is a human-friendly library that helps scientists and engineers build and manage real-life data science projects. Metaflow was originally developed at Netflix to boost the productivity of data scientists who work on a wide variety of projects from classical statistics to state-of-the-art deep learning.","sidebar":"r"},"v/r/introduction/why-metaflow":{"id":"v/r/introduction/why-metaflow","title":"Why Metaflow","description":"Here is a data scientist.","sidebar":"r"},"v/r/introduction/wip-contributing-to-metaflow":{"id":"v/r/introduction/wip-contributing-to-metaflow","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!"},"v/r/metaflow-on-aws/deploy-to-aws":{"id":"v/r/metaflow-on-aws/deploy-to-aws","title":"Deploying to AWS","description":"See the Administrator\'s Guide to Metaflow"},"v/r/metaflow-on-aws/metaflow-on-aws":{"id":"v/r/metaflow-on-aws/metaflow-on-aws","title":"Metaflow on AWS","description":"Traditionally, there has been a tension between local \\\\(e.g. on a laptop\\\\) and remote \\\\(e.g. on a cluster or a cloud\\\\) development and execution: Developing on a laptop is fast, whereas iterating with a remote cluster is slower. A laptop is a severely resource-constrained environment whereas a cluster can have virtually unlimited resources. Worse, simple local scripts may need to be translated to a new paradigm that is understood by a cluster."},"v/r/metaflow-on-aws/metaflow-sandbox":{"id":"v/r/metaflow-on-aws/metaflow-sandbox","title":"Metaflow Sandbox","description":"As described in Metaflow on AWS, Metaflow comes with built-in integrations to various services on AWS. The seamless integration to the cloud is a key benefit of Metaflow."},"v/r/metaflow/basics":{"id":"v/r/metaflow/basics","title":"Basics of Metaflow","description":"This document introduces the basic concepts of Metaflow. If you are eager to try out Metaflow in practice, you can start with the tutorial. After the tutorial, you can return to this document to learn more about how Metaflow works."},"v/r/metaflow/client":{"id":"v/r/metaflow/client","title":"Inspecting Flows and Results","description":"Metaflow provides a client API that is used to inspect results of past runs. It is particularly well suited to being used in notebooks."},"v/r/metaflow/debugging":{"id":"v/r/metaflow/debugging","title":"Debugging with Metaflow","description":"Metaflow wants to make debugging failed flows as painless as possible."},"v/r/metaflow/failures":{"id":"v/r/metaflow/failures","title":"Dealing with Failures","description":"Failures are a natural, expected part of data science workflows. Here are some typical reasons why you can expect your workflow to fail:"},"v/r/metaflow/scaling":{"id":"v/r/metaflow/scaling","title":"Scaling Out and Up","description":"From a usability point of view, it is hard to beat the convenience of writing and running a straightforward script in the comfort of your favorite IDE and a local terminal. Since one of the core values of Metaflow is usability, we encourage you to start with this easy approach and not worry about scalability until it becomes an issue."},"v/r/metaflow/tagging":{"id":"v/r/metaflow/tagging","title":"Organizing Results","description":"A boring, under-appreciated part of high-quality science \\\\(or any project work in general\\\\), is keeping results organized. This is the key to effective collaboration, versioning of parallel lines of work, and reproducibility."},"v/r/README":{"id":"v/r/README","title":"Welcome to Metaflow for R","description":"Build and manage real-life data science projects with ease.","sidebar":"r"},"v/r/SUMMARY":{"id":"v/r/SUMMARY","title":"Table of contents","description":"Metaflow for R is in maintenance mode. It doesn\'t support the latest features of Metaflow."}}}')}}]);