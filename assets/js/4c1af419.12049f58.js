"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5405],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||a;return r?n.createElement(f,c(c({ref:t},u),{},{components:r})):n.createElement(f,c({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8405:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return w}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],i={},s="@catch",p={unversionedId:"api/step-decorators/catch",id:"api/step-decorators/catch",title:"@catch",description:"The @catch decorator ensures that a step will succeed, despite any errors in the user code or transient platform issues.",source:"@site/docs/api/step-decorators/catch.md",sourceDirName:"api/step-decorators",slug:"/api/step-decorators/catch",permalink:"/api/step-decorators/catch",editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/step-decorators/catch.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@card",permalink:"/api/step-decorators/card"},next:{title:"@conda",permalink:"/api/step-decorators/conda"}},u=[],l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},d=l("DocSection"),m=l("SigArgSection"),f=l("SigArg"),h=l("Description"),y=l("ParamSection"),g=l("Parameter"),b={toc:u};function w(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"catch"},"@catch"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@catch")," decorator ensures that a step will succeed, despite any errors in the user code or transient platform issues."),(0,a.kt)("p",null,"It is best used in conjunction with the ",(0,a.kt)("inlineCode",{parentName:"p"},"@retry")," decorator: After all retries have been exhausted, ",(0,a.kt)("inlineCode",{parentName:"p"},"@catch")," executes a no-op task that allows the run to continue. For more information, see ",(0,a.kt)("a",{parentName:"p",href:"/metaflow/failures"},"Dealing with Failures"),"."),(0,a.kt)(d,{type:"decorator",name:"catch",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/catch_decorator.py#L22",mdxType:"DocSection"},(0,a.kt)(m,{mdxType:"SigArgSection"},(0,a.kt)(f,{name:"...",mdxType:"SigArg"})),(0,a.kt)(h,{summary:"Specifies that the step will success under all circumstances.",extended_summary:"The decorator will create an optional artifact, specified by `var`, which\\ncontains the exception raised. You can use it to detect the presence\\nof errors, indicating that all happy-path artifacts produced by the step\\nare missing.",mdxType:"Description"}),(0,a.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,a.kt)(g,{name:"var",type:"string",desc:"Name of the artifact in which to store the caught exception.\\nIf not specified, the exception is not stored.",mdxType:"Parameter"}),(0,a.kt)(g,{name:"print_exception",type:"bool",desc:"Determines whether or not the exception is printed to\\nstdout when caught (Default: True).",mdxType:"Parameter"}))))}w.isMDXComponent=!0}}]);